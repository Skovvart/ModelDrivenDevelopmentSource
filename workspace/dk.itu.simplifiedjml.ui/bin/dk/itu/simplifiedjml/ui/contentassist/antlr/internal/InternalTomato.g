/*
* generated by Xtext
*/
grammar InternalTomato;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package dk.itu.simplifiedjml.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package dk.itu.simplifiedjml.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import dk.itu.simplifiedjml.services.TomatoGrammarAccess;

}

@parser::members {
 
 	private TomatoGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(TomatoGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleSimplifiedJMLModel
entryRuleSimplifiedJMLModel 
:
{ before(grammarAccess.getSimplifiedJMLModelRule()); }
	 ruleSimplifiedJMLModel
{ after(grammarAccess.getSimplifiedJMLModelRule()); } 
	 EOF 
;

// Rule SimplifiedJMLModel
ruleSimplifiedJMLModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimplifiedJMLModelAccess().getGroup()); }
(rule__SimplifiedJMLModel__Group__0)
{ after(grammarAccess.getSimplifiedJMLModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStructure
entryRuleStructure 
:
{ before(grammarAccess.getStructureRule()); }
	 ruleStructure
{ after(grammarAccess.getStructureRule()); } 
	 EOF 
;

// Rule Structure
ruleStructure
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStructureAccess().getGroup()); }
(rule__Structure__Group__0)
{ after(grammarAccess.getStructureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMethod
entryRuleMethod 
:
{ before(grammarAccess.getMethodRule()); }
	 ruleMethod
{ after(grammarAccess.getMethodRule()); } 
	 EOF 
;

// Rule Method
ruleMethod
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethodAccess().getGroup()); }
(rule__Method__Group__0)
{ after(grammarAccess.getMethodAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEString
entryRuleEString 
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEStringAccess().getAlternatives()); }
(rule__EString__Alternatives)
{ after(grammarAccess.getEStringAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnyOther
entryRuleAnyOther 
:
{ before(grammarAccess.getAnyOtherRule()); }
	 ruleAnyOther
{ after(grammarAccess.getAnyOtherRule()); } 
	 EOF 
;

// Rule AnyOther
ruleAnyOther
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnyOtherAccess().getAlternatives()); }
(rule__AnyOther__Alternatives)*
{ after(grammarAccess.getAnyOtherAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHackySignature
entryRuleHackySignature 
:
{ before(grammarAccess.getHackySignatureRule()); }
	 ruleHackySignature
{ after(grammarAccess.getHackySignatureRule()); } 
	 EOF 
;

// Rule HackySignature
ruleHackySignature
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHackySignatureAccess().getHACKY_SIGNTerminalRuleCall()); }
	RULE_HACKY_SIGN
{ after(grammarAccess.getHackySignatureAccess().getHACKY_SIGNTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__EString__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnyOther__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnyOtherAccess().getANY_OTHERTerminalRuleCall_0()); }
	RULE_ANY_OTHER
{ after(grammarAccess.getAnyOtherAccess().getANY_OTHERTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAnyOtherAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getAnyOtherAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__SimplifiedJMLModel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimplifiedJMLModel__Group__0__Impl
	rule__SimplifiedJMLModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimplifiedJMLModel__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimplifiedJMLModelAccess().getStructuresAssignment_0()); }
(rule__SimplifiedJMLModel__StructuresAssignment_0)
{ after(grammarAccess.getSimplifiedJMLModelAccess().getStructuresAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimplifiedJMLModel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimplifiedJMLModel__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimplifiedJMLModel__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimplifiedJMLModelAccess().getStructuresAssignment_1()); }
(rule__SimplifiedJMLModel__StructuresAssignment_1)*
{ after(grammarAccess.getSimplifiedJMLModelAccess().getStructuresAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Structure__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Structure__Group__0__Impl
	rule__Structure__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Structure__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureAccess().getStructureAction_0()); }
(

)
{ after(grammarAccess.getStructureAccess().getStructureAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Structure__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Structure__Group__1__Impl
	rule__Structure__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Structure__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureAccess().getClassKeyword_1()); }

	'class' 

{ after(grammarAccess.getStructureAccess().getClassKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Structure__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Structure__Group__2__Impl
	rule__Structure__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Structure__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureAccess().getNameAssignment_2()); }
(rule__Structure__NameAssignment_2)
{ after(grammarAccess.getStructureAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Structure__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Structure__Group__3__Impl
	rule__Structure__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Structure__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getStructureAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Structure__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Structure__Group__4__Impl
	rule__Structure__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Structure__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureAccess().getGroup_4()); }
(rule__Structure__Group_4__0)?
{ after(grammarAccess.getStructureAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Structure__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Structure__Group__5__Impl
	rule__Structure__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Structure__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureAccess().getGroup_5()); }
(rule__Structure__Group_5__0)?
{ after(grammarAccess.getStructureAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Structure__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Structure__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Structure__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getStructureAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Structure__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Structure__Group_4__0__Impl
	rule__Structure__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Structure__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureAccess().getInvariantKeyword_4_0()); }

	'//@ invariant' 

{ after(grammarAccess.getStructureAccess().getInvariantKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Structure__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Structure__Group_4__1__Impl
	rule__Structure__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Structure__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureAccess().getInvariantsAssignment_4_1()); }
(rule__Structure__InvariantsAssignment_4_1)
{ after(grammarAccess.getStructureAccess().getInvariantsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Structure__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Structure__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Structure__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureAccess().getGroup_4_2()); }
(rule__Structure__Group_4_2__0)*
{ after(grammarAccess.getStructureAccess().getGroup_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Structure__Group_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Structure__Group_4_2__0__Impl
	rule__Structure__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Structure__Group_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureAccess().getInvariantKeyword_4_2_0()); }

	'//@ invariant' 

{ after(grammarAccess.getStructureAccess().getInvariantKeyword_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Structure__Group_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Structure__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Structure__Group_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureAccess().getInvariantsAssignment_4_2_1()); }
(rule__Structure__InvariantsAssignment_4_2_1)
{ after(grammarAccess.getStructureAccess().getInvariantsAssignment_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Structure__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Structure__Group_5__0__Impl
	rule__Structure__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Structure__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureAccess().getMethodsAssignment_5_0()); }
(rule__Structure__MethodsAssignment_5_0)
{ after(grammarAccess.getStructureAccess().getMethodsAssignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Structure__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Structure__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Structure__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureAccess().getMethodsAssignment_5_1()); }
(rule__Structure__MethodsAssignment_5_1)*
{ after(grammarAccess.getStructureAccess().getMethodsAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Method__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__0__Impl
	rule__Method__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getMethodAction_0()); }
(

)
{ after(grammarAccess.getMethodAccess().getMethodAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__1__Impl
	rule__Method__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getGroup_1()); }
(rule__Method__Group_1__0)?
{ after(grammarAccess.getMethodAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__2__Impl
	rule__Method__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getGroup_2()); }
(rule__Method__Group_2__0)?
{ after(grammarAccess.getMethodAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__3__Impl
	rule__Method__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getAUTOGENERATEDKeyword_3()); }

	'/*< AUTO GENERATED >*/' 

{ after(grammarAccess.getMethodAccess().getAUTOGENERATEDKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__4__Impl
	rule__Method__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getSignatureAssignment_4()); }
(rule__Method__SignatureAssignment_4)
{ after(grammarAccess.getMethodAccess().getSignatureAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__5__Impl
	rule__Method__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getLeftCurlyBracketKeyword_5()); }

	'{' 

{ after(grammarAccess.getMethodAccess().getLeftCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__6__Impl
	rule__Method__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getTODOImplementationKeyword_6()); }

	'/* TODO: Implementation */' 

{ after(grammarAccess.getMethodAccess().getTODOImplementationKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__7__Impl
	rule__Method__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getThrowNewUnsupportedOperationExceptionNotImplementedKeyword_7()); }

	'throw new UnsupportedOperationException("Not Implemented");' 

{ after(grammarAccess.getMethodAccess().getThrowNewUnsupportedOperationExceptionNotImplementedKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getRightCurlyBracketKeyword_8()); }

	'}' 

{ after(grammarAccess.getMethodAccess().getRightCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Method__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_1__0__Impl
	rule__Method__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getRequiresKeyword_1_0()); }

	'//@ requires' 

{ after(grammarAccess.getMethodAccess().getRequiresKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_1__1__Impl
	rule__Method__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getRequirementsAssignment_1_1()); }
(rule__Method__RequirementsAssignment_1_1)
{ after(grammarAccess.getMethodAccess().getRequirementsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_1__2__Impl
	rule__Method__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getLineFeedLfKeyword_1_2()); }

	'\n' 

{ after(grammarAccess.getMethodAccess().getLineFeedLfKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getGroup_1_3()); }
(rule__Method__Group_1_3__0)*
{ after(grammarAccess.getMethodAccess().getGroup_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Method__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_1_3__0__Impl
	rule__Method__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getRequiresKeyword_1_3_0()); }

	'//@ requires' 

{ after(grammarAccess.getMethodAccess().getRequiresKeyword_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_1_3__1__Impl
	rule__Method__Group_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getRequirementsAssignment_1_3_1()); }
(rule__Method__RequirementsAssignment_1_3_1)
{ after(grammarAccess.getMethodAccess().getRequirementsAssignment_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_1_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_1_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_1_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getLineFeedLfKeyword_1_3_2()); }

	'\n' 

{ after(grammarAccess.getMethodAccess().getLineFeedLfKeyword_1_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Method__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_2__0__Impl
	rule__Method__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getEnsuresKeyword_2_0()); }

	'//@ ensures' 

{ after(grammarAccess.getMethodAccess().getEnsuresKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_2__1__Impl
	rule__Method__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getEnsuresAssignment_2_1()); }
(rule__Method__EnsuresAssignment_2_1)
{ after(grammarAccess.getMethodAccess().getEnsuresAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_2__2__Impl
	rule__Method__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getLineFeedLfKeyword_2_2()); }

	'\n' 

{ after(grammarAccess.getMethodAccess().getLineFeedLfKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getGroup_2_3()); }
(rule__Method__Group_2_3__0)*
{ after(grammarAccess.getMethodAccess().getGroup_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Method__Group_2_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_2_3__0__Impl
	rule__Method__Group_2_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_2_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getEnsuresKeyword_2_3_0()); }

	'//@ ensures' 

{ after(grammarAccess.getMethodAccess().getEnsuresKeyword_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_2_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_2_3__1__Impl
	rule__Method__Group_2_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_2_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getEnsuresAssignment_2_3_1()); }
(rule__Method__EnsuresAssignment_2_3_1)
{ after(grammarAccess.getMethodAccess().getEnsuresAssignment_2_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_2_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_2_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_2_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getLineFeedLfKeyword_2_3_2()); }

	'\n' 

{ after(grammarAccess.getMethodAccess().getLineFeedLfKeyword_2_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__SimplifiedJMLModel__StructuresAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimplifiedJMLModelAccess().getStructuresStructureParserRuleCall_0_0()); }
	ruleStructure{ after(grammarAccess.getSimplifiedJMLModelAccess().getStructuresStructureParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimplifiedJMLModel__StructuresAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimplifiedJMLModelAccess().getStructuresStructureParserRuleCall_1_0()); }
	ruleStructure{ after(grammarAccess.getSimplifiedJMLModelAccess().getStructuresStructureParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Structure__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureAccess().getNameEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getStructureAccess().getNameEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Structure__InvariantsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureAccess().getInvariantsAnyOtherParserRuleCall_4_1_0()); }
	ruleAnyOther{ after(grammarAccess.getStructureAccess().getInvariantsAnyOtherParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Structure__InvariantsAssignment_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureAccess().getInvariantsAnyOtherParserRuleCall_4_2_1_0()); }
	ruleAnyOther{ after(grammarAccess.getStructureAccess().getInvariantsAnyOtherParserRuleCall_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Structure__MethodsAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureAccess().getMethodsMethodParserRuleCall_5_0_0()); }
	ruleMethod{ after(grammarAccess.getStructureAccess().getMethodsMethodParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Structure__MethodsAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructureAccess().getMethodsMethodParserRuleCall_5_1_0()); }
	ruleMethod{ after(grammarAccess.getStructureAccess().getMethodsMethodParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__RequirementsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getRequirementsAnyOtherParserRuleCall_1_1_0()); }
	ruleAnyOther{ after(grammarAccess.getMethodAccess().getRequirementsAnyOtherParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__RequirementsAssignment_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getRequirementsAnyOtherParserRuleCall_1_3_1_0()); }
	ruleAnyOther{ after(grammarAccess.getMethodAccess().getRequirementsAnyOtherParserRuleCall_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__EnsuresAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getEnsuresAnyOtherParserRuleCall_2_1_0()); }
	ruleAnyOther{ after(grammarAccess.getMethodAccess().getEnsuresAnyOtherParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__EnsuresAssignment_2_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getEnsuresAnyOtherParserRuleCall_2_3_1_0()); }
	ruleAnyOther{ after(grammarAccess.getMethodAccess().getEnsuresAnyOtherParserRuleCall_2_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__SignatureAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getSignatureHackySignatureParserRuleCall_4_0()); }
	ruleHackySignature{ after(grammarAccess.getMethodAccess().getSignatureHackySignatureParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_INT : '#@IAMANINT' ('0'..'1')+;

RULE_SL_COMMENT : '##' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ML_COMMENT : '/#' ( options {greedy=false;} : . )*'#\\';

RULE_HACKY_SIGN : ('public'|'private'|'protected'|'/* default */') ~(')')* ')';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


