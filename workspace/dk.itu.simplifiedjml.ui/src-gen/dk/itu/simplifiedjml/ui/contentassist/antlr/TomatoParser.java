/*
* generated by Xtext
*/
package dk.itu.simplifiedjml.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import dk.itu.simplifiedjml.services.TomatoGrammarAccess;

public class TomatoParser extends AbstractContentAssistParser {
	
	@Inject
	private TomatoGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected dk.itu.simplifiedjml.ui.contentassist.antlr.internal.InternalTomatoParser createParser() {
		dk.itu.simplifiedjml.ui.contentassist.antlr.internal.InternalTomatoParser result = new dk.itu.simplifiedjml.ui.contentassist.antlr.internal.InternalTomatoParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
					put(grammarAccess.getAnyOtherAccess().getAlternatives(), "rule__AnyOther__Alternatives");
					put(grammarAccess.getSimplifiedJMLModelAccess().getGroup(), "rule__SimplifiedJMLModel__Group__0");
					put(grammarAccess.getStructureAccess().getGroup(), "rule__Structure__Group__0");
					put(grammarAccess.getStructureAccess().getGroup_4(), "rule__Structure__Group_4__0");
					put(grammarAccess.getStructureAccess().getGroup_4_2(), "rule__Structure__Group_4_2__0");
					put(grammarAccess.getStructureAccess().getGroup_5(), "rule__Structure__Group_5__0");
					put(grammarAccess.getMethodAccess().getGroup(), "rule__Method__Group__0");
					put(grammarAccess.getMethodAccess().getGroup_1(), "rule__Method__Group_1__0");
					put(grammarAccess.getMethodAccess().getGroup_1_3(), "rule__Method__Group_1_3__0");
					put(grammarAccess.getMethodAccess().getGroup_2(), "rule__Method__Group_2__0");
					put(grammarAccess.getMethodAccess().getGroup_2_3(), "rule__Method__Group_2_3__0");
					put(grammarAccess.getSimplifiedJMLModelAccess().getStructuresAssignment_0(), "rule__SimplifiedJMLModel__StructuresAssignment_0");
					put(grammarAccess.getSimplifiedJMLModelAccess().getStructuresAssignment_1(), "rule__SimplifiedJMLModel__StructuresAssignment_1");
					put(grammarAccess.getStructureAccess().getNameAssignment_2(), "rule__Structure__NameAssignment_2");
					put(grammarAccess.getStructureAccess().getInvariantsAssignment_4_1(), "rule__Structure__InvariantsAssignment_4_1");
					put(grammarAccess.getStructureAccess().getInvariantsAssignment_4_2_1(), "rule__Structure__InvariantsAssignment_4_2_1");
					put(grammarAccess.getStructureAccess().getMethodsAssignment_5_0(), "rule__Structure__MethodsAssignment_5_0");
					put(grammarAccess.getStructureAccess().getMethodsAssignment_5_1(), "rule__Structure__MethodsAssignment_5_1");
					put(grammarAccess.getMethodAccess().getRequirementsAssignment_1_1(), "rule__Method__RequirementsAssignment_1_1");
					put(grammarAccess.getMethodAccess().getRequirementsAssignment_1_3_1(), "rule__Method__RequirementsAssignment_1_3_1");
					put(grammarAccess.getMethodAccess().getEnsuresAssignment_2_1(), "rule__Method__EnsuresAssignment_2_1");
					put(grammarAccess.getMethodAccess().getEnsuresAssignment_2_3_1(), "rule__Method__EnsuresAssignment_2_3_1");
					put(grammarAccess.getMethodAccess().getSignatureAssignment_4(), "rule__Method__SignatureAssignment_4");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			dk.itu.simplifiedjml.ui.contentassist.antlr.internal.InternalTomatoParser typedParser = (dk.itu.simplifiedjml.ui.contentassist.antlr.internal.InternalTomatoParser) parser;
			typedParser.entryRuleSimplifiedJMLModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public TomatoGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(TomatoGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
