/*
* generated by Xtext
*/

package dk.itu.bddcontracts.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;


@Singleton
public class GherkinGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cModelAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cFeaturesAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cFeaturesFeatureParserRuleCall_1_0_0 = (RuleCall)cFeaturesAssignment_1_0.eContents().get(0);
		private final Assignment cFeaturesAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cFeaturesFeatureParserRuleCall_1_1_0 = (RuleCall)cFeaturesAssignment_1_1.eContents().get(0);
		
		//Model:
		//	{Model} (Features+=Feature Features+=Feature*)?;
		public ParserRule getRule() { return rule; }

		//{Model} (Features+=Feature Features+=Feature*)?
		public Group getGroup() { return cGroup; }

		//{Model}
		public Action getModelAction_0() { return cModelAction_0; }

		//(Features+=Feature Features+=Feature*)?
		public Group getGroup_1() { return cGroup_1; }

		//Features+=Feature
		public Assignment getFeaturesAssignment_1_0() { return cFeaturesAssignment_1_0; }

		//Feature
		public RuleCall getFeaturesFeatureParserRuleCall_1_0_0() { return cFeaturesFeatureParserRuleCall_1_0_0; }

		//Features+=Feature*
		public Assignment getFeaturesAssignment_1_1() { return cFeaturesAssignment_1_1; }

		//Feature
		public RuleCall getFeaturesFeatureParserRuleCall_1_1_0() { return cFeaturesFeatureParserRuleCall_1_1_0; }
	}

	public class ScenarioElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Scenario");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cScenarioSpecificParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cScenarioOutlineParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Scenario:
		//	ScenarioSpecific | ScenarioOutline;
		public ParserRule getRule() { return rule; }

		//ScenarioSpecific | ScenarioOutline
		public Alternatives getAlternatives() { return cAlternatives; }

		//ScenarioSpecific
		public RuleCall getScenarioSpecificParserRuleCall_0() { return cScenarioSpecificParserRuleCall_0; }

		//ScenarioOutline
		public RuleCall getScenarioOutlineParserRuleCall_1() { return cScenarioOutlineParserRuleCall_1; }
	}

	public class ContentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Content");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cReferenceParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cWordParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Content:
		//	Reference | Word;
		public ParserRule getRule() { return rule; }

		//Reference | Word
		public Alternatives getAlternatives() { return cAlternatives; }

		//Reference
		public RuleCall getReferenceParserRuleCall_0() { return cReferenceParserRuleCall_0; }

		//Word
		public RuleCall getWordParserRuleCall_1() { return cWordParserRuleCall_1; }
	}

	public class FeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Feature");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFeatureKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cDescriptionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDescriptionEStringParserRuleCall_1_0 = (RuleCall)cDescriptionAssignment_1.eContents().get(0);
		private final Assignment cSummaryAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSummaryMAnyParserRuleCall_2_0 = (RuleCall)cSummaryAssignment_2.eContents().get(0);
		private final Assignment cBackgroundAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cBackgroundBackgroundParserRuleCall_3_0 = (RuleCall)cBackgroundAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cScenariosAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cScenariosScenarioParserRuleCall_4_0_0 = (RuleCall)cScenariosAssignment_4_0.eContents().get(0);
		private final Assignment cScenariosAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cScenariosScenarioParserRuleCall_4_1_0 = (RuleCall)cScenariosAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Assignment cBehaviorsAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final RuleCall cBehaviorsBehaviorParserRuleCall_5_0_0 = (RuleCall)cBehaviorsAssignment_5_0.eContents().get(0);
		private final Assignment cBehaviorsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cBehaviorsBehaviorParserRuleCall_5_1_0 = (RuleCall)cBehaviorsAssignment_5_1.eContents().get(0);
		
		//Feature:
		//	"Feature:" description=EString summary=MAny? Background=Background? (Scenarios+=Scenario Scenarios+=Scenario*)?
		//	(Behaviors+=Behavior Behaviors+=Behavior*)?;
		public ParserRule getRule() { return rule; }

		//"Feature:" description=EString summary=MAny? Background=Background? (Scenarios+=Scenario Scenarios+=Scenario*)?
		//(Behaviors+=Behavior Behaviors+=Behavior*)?
		public Group getGroup() { return cGroup; }

		//"Feature:"
		public Keyword getFeatureKeyword_0() { return cFeatureKeyword_0; }

		//description=EString
		public Assignment getDescriptionAssignment_1() { return cDescriptionAssignment_1; }

		//EString
		public RuleCall getDescriptionEStringParserRuleCall_1_0() { return cDescriptionEStringParserRuleCall_1_0; }

		//summary=MAny?
		public Assignment getSummaryAssignment_2() { return cSummaryAssignment_2; }

		//MAny
		public RuleCall getSummaryMAnyParserRuleCall_2_0() { return cSummaryMAnyParserRuleCall_2_0; }

		//Background=Background?
		public Assignment getBackgroundAssignment_3() { return cBackgroundAssignment_3; }

		//Background
		public RuleCall getBackgroundBackgroundParserRuleCall_3_0() { return cBackgroundBackgroundParserRuleCall_3_0; }

		//(Scenarios+=Scenario Scenarios+=Scenario*)?
		public Group getGroup_4() { return cGroup_4; }

		//Scenarios+=Scenario
		public Assignment getScenariosAssignment_4_0() { return cScenariosAssignment_4_0; }

		//Scenario
		public RuleCall getScenariosScenarioParserRuleCall_4_0_0() { return cScenariosScenarioParserRuleCall_4_0_0; }

		//Scenarios+=Scenario*
		public Assignment getScenariosAssignment_4_1() { return cScenariosAssignment_4_1; }

		//Scenario
		public RuleCall getScenariosScenarioParserRuleCall_4_1_0() { return cScenariosScenarioParserRuleCall_4_1_0; }

		//(Behaviors+=Behavior Behaviors+=Behavior*)?
		public Group getGroup_5() { return cGroup_5; }

		//Behaviors+=Behavior
		public Assignment getBehaviorsAssignment_5_0() { return cBehaviorsAssignment_5_0; }

		//Behavior
		public RuleCall getBehaviorsBehaviorParserRuleCall_5_0_0() { return cBehaviorsBehaviorParserRuleCall_5_0_0; }

		//Behaviors+=Behavior*
		public Assignment getBehaviorsAssignment_5_1() { return cBehaviorsAssignment_5_1; }

		//Behavior
		public RuleCall getBehaviorsBehaviorParserRuleCall_5_1_0() { return cBehaviorsBehaviorParserRuleCall_5_1_0; }
	}

	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//EString returns ecore::EString:
		//	STRING | ID | INT;
		public ParserRule getRule() { return rule; }

		//STRING | ID | INT
		public Alternatives getAlternatives() { return cAlternatives; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }

		//INT
		public RuleCall getINTTerminalRuleCall_2() { return cINTTerminalRuleCall_2; }
	}

	public class MAnyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MAny");
		private final RuleCall cAnyParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//MAny returns ecore::EString:
		//	Any+;
		public ParserRule getRule() { return rule; }

		//Any+
		public RuleCall getAnyParserRuleCall() { return cAnyParserRuleCall; }
	}

	public class AnyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Any");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cANY_OTHERTerminalRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//Any returns ecore::EString:
		//	ID | INT | STRING | ANY_OTHER;
		public ParserRule getRule() { return rule; }

		//ID | INT | STRING | ANY_OTHER
		public Alternatives getAlternatives() { return cAlternatives; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_2() { return cSTRINGTerminalRuleCall_2; }

		//ANY_OTHER
		public RuleCall getANY_OTHERTerminalRuleCall_3() { return cANY_OTHERTerminalRuleCall_3; }
	}

	public class BackgroundElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Background");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBackgroundKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cGivenKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cGivenBlocksAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cGivenBlocksSentenceParserRuleCall_2_0 = (RuleCall)cGivenBlocksAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cAndKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cGivenBlocksAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cGivenBlocksSentenceParserRuleCall_3_1_0 = (RuleCall)cGivenBlocksAssignment_3_1.eContents().get(0);
		
		//Background:
		//	"Background:" "Given" GivenBlocks+=Sentence ("And" GivenBlocks+=Sentence)*;
		public ParserRule getRule() { return rule; }

		//"Background:" "Given" GivenBlocks+=Sentence ("And" GivenBlocks+=Sentence)*
		public Group getGroup() { return cGroup; }

		//"Background:"
		public Keyword getBackgroundKeyword_0() { return cBackgroundKeyword_0; }

		//"Given"
		public Keyword getGivenKeyword_1() { return cGivenKeyword_1; }

		//GivenBlocks+=Sentence
		public Assignment getGivenBlocksAssignment_2() { return cGivenBlocksAssignment_2; }

		//Sentence
		public RuleCall getGivenBlocksSentenceParserRuleCall_2_0() { return cGivenBlocksSentenceParserRuleCall_2_0; }

		//("And" GivenBlocks+=Sentence)*
		public Group getGroup_3() { return cGroup_3; }

		//"And"
		public Keyword getAndKeyword_3_0() { return cAndKeyword_3_0; }

		//GivenBlocks+=Sentence
		public Assignment getGivenBlocksAssignment_3_1() { return cGivenBlocksAssignment_3_1; }

		//Sentence
		public RuleCall getGivenBlocksSentenceParserRuleCall_3_1_0() { return cGivenBlocksSentenceParserRuleCall_3_1_0; }
	}

	public class BehaviorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Behavior");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBehaviorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cDescriptionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDescriptionMAnyParserRuleCall_1_0 = (RuleCall)cDescriptionAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cRequiringKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cRequiringBlocksAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cRequiringBlocksSentenceParserRuleCall_2_1_0 = (RuleCall)cRequiringBlocksAssignment_2_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cAndKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cRequiringBlocksAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cRequiringBlocksSentenceParserRuleCall_2_2_1_0 = (RuleCall)cRequiringBlocksAssignment_2_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cEnsuringKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cEnsuringBlocksAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cEnsuringBlocksSentenceParserRuleCall_3_1_0 = (RuleCall)cEnsuringBlocksAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cAndKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cEnsuringBlocksAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cEnsuringBlocksSentenceParserRuleCall_3_2_1_0 = (RuleCall)cEnsuringBlocksAssignment_3_2_1.eContents().get(0);
		
		//Behavior:
		//	"Behavior:" description=MAny ("Requiring" RequiringBlocks+=Sentence ("And" RequiringBlocks+=Sentence)*)? ("Ensuring"
		//	EnsuringBlocks+=Sentence ("And" EnsuringBlocks+=Sentence)*)?;
		public ParserRule getRule() { return rule; }

		//"Behavior:" description=MAny ("Requiring" RequiringBlocks+=Sentence ("And" RequiringBlocks+=Sentence)*)? ("Ensuring"
		//EnsuringBlocks+=Sentence ("And" EnsuringBlocks+=Sentence)*)?
		public Group getGroup() { return cGroup; }

		//"Behavior:"
		public Keyword getBehaviorKeyword_0() { return cBehaviorKeyword_0; }

		//description=MAny
		public Assignment getDescriptionAssignment_1() { return cDescriptionAssignment_1; }

		//MAny
		public RuleCall getDescriptionMAnyParserRuleCall_1_0() { return cDescriptionMAnyParserRuleCall_1_0; }

		//("Requiring" RequiringBlocks+=Sentence ("And" RequiringBlocks+=Sentence)*)?
		public Group getGroup_2() { return cGroup_2; }

		//"Requiring"
		public Keyword getRequiringKeyword_2_0() { return cRequiringKeyword_2_0; }

		//RequiringBlocks+=Sentence
		public Assignment getRequiringBlocksAssignment_2_1() { return cRequiringBlocksAssignment_2_1; }

		//Sentence
		public RuleCall getRequiringBlocksSentenceParserRuleCall_2_1_0() { return cRequiringBlocksSentenceParserRuleCall_2_1_0; }

		//("And" RequiringBlocks+=Sentence)*
		public Group getGroup_2_2() { return cGroup_2_2; }

		//"And"
		public Keyword getAndKeyword_2_2_0() { return cAndKeyword_2_2_0; }

		//RequiringBlocks+=Sentence
		public Assignment getRequiringBlocksAssignment_2_2_1() { return cRequiringBlocksAssignment_2_2_1; }

		//Sentence
		public RuleCall getRequiringBlocksSentenceParserRuleCall_2_2_1_0() { return cRequiringBlocksSentenceParserRuleCall_2_2_1_0; }

		//("Ensuring" EnsuringBlocks+=Sentence ("And" EnsuringBlocks+=Sentence)*)?
		public Group getGroup_3() { return cGroup_3; }

		//"Ensuring"
		public Keyword getEnsuringKeyword_3_0() { return cEnsuringKeyword_3_0; }

		//EnsuringBlocks+=Sentence
		public Assignment getEnsuringBlocksAssignment_3_1() { return cEnsuringBlocksAssignment_3_1; }

		//Sentence
		public RuleCall getEnsuringBlocksSentenceParserRuleCall_3_1_0() { return cEnsuringBlocksSentenceParserRuleCall_3_1_0; }

		//("And" EnsuringBlocks+=Sentence)*
		public Group getGroup_3_2() { return cGroup_3_2; }

		//"And"
		public Keyword getAndKeyword_3_2_0() { return cAndKeyword_3_2_0; }

		//EnsuringBlocks+=Sentence
		public Assignment getEnsuringBlocksAssignment_3_2_1() { return cEnsuringBlocksAssignment_3_2_1; }

		//Sentence
		public RuleCall getEnsuringBlocksSentenceParserRuleCall_3_2_1_0() { return cEnsuringBlocksSentenceParserRuleCall_3_2_1_0; }
	}

	public class SentenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Sentence");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cWordsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cWordsContentParserRuleCall_0_0 = (RuleCall)cWordsAssignment_0.eContents().get(0);
		private final Assignment cWordsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cWordsContentParserRuleCall_1_0 = (RuleCall)cWordsAssignment_1.eContents().get(0);
		
		//Sentence:
		//	words+=Content words+=Content*;
		public ParserRule getRule() { return rule; }

		//words+=Content words+=Content*
		public Group getGroup() { return cGroup; }

		//words+=Content
		public Assignment getWordsAssignment_0() { return cWordsAssignment_0; }

		//Content
		public RuleCall getWordsContentParserRuleCall_0_0() { return cWordsContentParserRuleCall_0_0; }

		//words+=Content*
		public Assignment getWordsAssignment_1() { return cWordsAssignment_1; }

		//Content
		public RuleCall getWordsContentParserRuleCall_1_0() { return cWordsContentParserRuleCall_1_0; }
	}

	public class ScenarioSpecificElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ScenarioSpecific");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cScenarioKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cDescriptionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDescriptionMAnyParserRuleCall_1_0 = (RuleCall)cDescriptionAssignment_1.eContents().get(0);
		private final Keyword cGivenKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cGivenBlocksAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cGivenBlocksSentenceParserRuleCall_3_0 = (RuleCall)cGivenBlocksAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cAndKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cGivenBlocksAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cGivenBlocksSentenceParserRuleCall_4_1_0 = (RuleCall)cGivenBlocksAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cWhenKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cWhenBlocksAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cWhenBlocksSentenceParserRuleCall_5_1_0 = (RuleCall)cWhenBlocksAssignment_5_1.eContents().get(0);
		private final Group cGroup_5_2 = (Group)cGroup_5.eContents().get(2);
		private final Keyword cAndKeyword_5_2_0 = (Keyword)cGroup_5_2.eContents().get(0);
		private final Assignment cWhenBlocksAssignment_5_2_1 = (Assignment)cGroup_5_2.eContents().get(1);
		private final RuleCall cWhenBlocksSentenceParserRuleCall_5_2_1_0 = (RuleCall)cWhenBlocksAssignment_5_2_1.eContents().get(0);
		private final Keyword cThenKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cThenBlocksAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cThenBlocksSentenceParserRuleCall_7_0 = (RuleCall)cThenBlocksAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cAndKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cThenBlocksAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cThenBlocksSentenceParserRuleCall_8_1_0 = (RuleCall)cThenBlocksAssignment_8_1.eContents().get(0);
		
		//ScenarioSpecific:
		//	"Scenario:" description=MAny "Given" GivenBlocks+=Sentence ("And" GivenBlocks+=Sentence)* ("When" WhenBlocks+=Sentence
		//	("And" WhenBlocks+=Sentence)*)? "Then" ThenBlocks+=Sentence ("And" ThenBlocks+=Sentence)*;
		public ParserRule getRule() { return rule; }

		//"Scenario:" description=MAny "Given" GivenBlocks+=Sentence ("And" GivenBlocks+=Sentence)* ("When" WhenBlocks+=Sentence
		//("And" WhenBlocks+=Sentence)*)? "Then" ThenBlocks+=Sentence ("And" ThenBlocks+=Sentence)*
		public Group getGroup() { return cGroup; }

		//"Scenario:"
		public Keyword getScenarioKeyword_0() { return cScenarioKeyword_0; }

		//description=MAny
		public Assignment getDescriptionAssignment_1() { return cDescriptionAssignment_1; }

		//MAny
		public RuleCall getDescriptionMAnyParserRuleCall_1_0() { return cDescriptionMAnyParserRuleCall_1_0; }

		//"Given"
		public Keyword getGivenKeyword_2() { return cGivenKeyword_2; }

		//GivenBlocks+=Sentence
		public Assignment getGivenBlocksAssignment_3() { return cGivenBlocksAssignment_3; }

		//Sentence
		public RuleCall getGivenBlocksSentenceParserRuleCall_3_0() { return cGivenBlocksSentenceParserRuleCall_3_0; }

		//("And" GivenBlocks+=Sentence)*
		public Group getGroup_4() { return cGroup_4; }

		//"And"
		public Keyword getAndKeyword_4_0() { return cAndKeyword_4_0; }

		//GivenBlocks+=Sentence
		public Assignment getGivenBlocksAssignment_4_1() { return cGivenBlocksAssignment_4_1; }

		//Sentence
		public RuleCall getGivenBlocksSentenceParserRuleCall_4_1_0() { return cGivenBlocksSentenceParserRuleCall_4_1_0; }

		//("When" WhenBlocks+=Sentence ("And" WhenBlocks+=Sentence)*)?
		public Group getGroup_5() { return cGroup_5; }

		//"When"
		public Keyword getWhenKeyword_5_0() { return cWhenKeyword_5_0; }

		//WhenBlocks+=Sentence
		public Assignment getWhenBlocksAssignment_5_1() { return cWhenBlocksAssignment_5_1; }

		//Sentence
		public RuleCall getWhenBlocksSentenceParserRuleCall_5_1_0() { return cWhenBlocksSentenceParserRuleCall_5_1_0; }

		//("And" WhenBlocks+=Sentence)*
		public Group getGroup_5_2() { return cGroup_5_2; }

		//"And"
		public Keyword getAndKeyword_5_2_0() { return cAndKeyword_5_2_0; }

		//WhenBlocks+=Sentence
		public Assignment getWhenBlocksAssignment_5_2_1() { return cWhenBlocksAssignment_5_2_1; }

		//Sentence
		public RuleCall getWhenBlocksSentenceParserRuleCall_5_2_1_0() { return cWhenBlocksSentenceParserRuleCall_5_2_1_0; }

		//"Then"
		public Keyword getThenKeyword_6() { return cThenKeyword_6; }

		//ThenBlocks+=Sentence
		public Assignment getThenBlocksAssignment_7() { return cThenBlocksAssignment_7; }

		//Sentence
		public RuleCall getThenBlocksSentenceParserRuleCall_7_0() { return cThenBlocksSentenceParserRuleCall_7_0; }

		//("And" ThenBlocks+=Sentence)*
		public Group getGroup_8() { return cGroup_8; }

		//"And"
		public Keyword getAndKeyword_8_0() { return cAndKeyword_8_0; }

		//ThenBlocks+=Sentence
		public Assignment getThenBlocksAssignment_8_1() { return cThenBlocksAssignment_8_1; }

		//Sentence
		public RuleCall getThenBlocksSentenceParserRuleCall_8_1_0() { return cThenBlocksSentenceParserRuleCall_8_1_0; }
	}

	public class ScenarioOutlineElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ScenarioOutline");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cScenarioOutlineKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cDescriptionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDescriptionMAnyParserRuleCall_1_0 = (RuleCall)cDescriptionAssignment_1.eContents().get(0);
		private final Keyword cGivenKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cGivenBlocksAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cGivenBlocksSentenceParserRuleCall_3_0 = (RuleCall)cGivenBlocksAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cAndKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cGivenBlocksAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cGivenBlocksSentenceParserRuleCall_4_1_0 = (RuleCall)cGivenBlocksAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cWhenKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cWhenBlocksAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cWhenBlocksSentenceParserRuleCall_5_1_0 = (RuleCall)cWhenBlocksAssignment_5_1.eContents().get(0);
		private final Group cGroup_5_2 = (Group)cGroup_5.eContents().get(2);
		private final Keyword cAndKeyword_5_2_0 = (Keyword)cGroup_5_2.eContents().get(0);
		private final Assignment cWhenBlocksAssignment_5_2_1 = (Assignment)cGroup_5_2.eContents().get(1);
		private final RuleCall cWhenBlocksSentenceParserRuleCall_5_2_1_0 = (RuleCall)cWhenBlocksAssignment_5_2_1.eContents().get(0);
		private final Keyword cThenKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cThenBlocksAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cThenBlocksSentenceParserRuleCall_7_0 = (RuleCall)cThenBlocksAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cAndKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cThenBlocksAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cThenBlocksSentenceParserRuleCall_8_1_0 = (RuleCall)cThenBlocksAssignment_8_1.eContents().get(0);
		private final Keyword cExamplesKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cExamplesAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cExamplesExampleParserRuleCall_10_0 = (RuleCall)cExamplesAssignment_10.eContents().get(0);
		private final Assignment cExamplesAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cExamplesExampleParserRuleCall_11_0 = (RuleCall)cExamplesAssignment_11.eContents().get(0);
		
		//ScenarioOutline:
		//	"Scenario Outline:" description=MAny "Given" GivenBlocks+=Sentence ("And" GivenBlocks+=Sentence)* ("When"
		//	WhenBlocks+=Sentence ("And" WhenBlocks+=Sentence)*)? "Then" ThenBlocks+=Sentence ("And" ThenBlocks+=Sentence)*
		//	"Examples:" Examples+=Example Examples+=Example*;
		public ParserRule getRule() { return rule; }

		//"Scenario Outline:" description=MAny "Given" GivenBlocks+=Sentence ("And" GivenBlocks+=Sentence)* ("When"
		//WhenBlocks+=Sentence ("And" WhenBlocks+=Sentence)*)? "Then" ThenBlocks+=Sentence ("And" ThenBlocks+=Sentence)*
		//"Examples:" Examples+=Example Examples+=Example*
		public Group getGroup() { return cGroup; }

		//"Scenario Outline:"
		public Keyword getScenarioOutlineKeyword_0() { return cScenarioOutlineKeyword_0; }

		//description=MAny
		public Assignment getDescriptionAssignment_1() { return cDescriptionAssignment_1; }

		//MAny
		public RuleCall getDescriptionMAnyParserRuleCall_1_0() { return cDescriptionMAnyParserRuleCall_1_0; }

		//"Given"
		public Keyword getGivenKeyword_2() { return cGivenKeyword_2; }

		//GivenBlocks+=Sentence
		public Assignment getGivenBlocksAssignment_3() { return cGivenBlocksAssignment_3; }

		//Sentence
		public RuleCall getGivenBlocksSentenceParserRuleCall_3_0() { return cGivenBlocksSentenceParserRuleCall_3_0; }

		//("And" GivenBlocks+=Sentence)*
		public Group getGroup_4() { return cGroup_4; }

		//"And"
		public Keyword getAndKeyword_4_0() { return cAndKeyword_4_0; }

		//GivenBlocks+=Sentence
		public Assignment getGivenBlocksAssignment_4_1() { return cGivenBlocksAssignment_4_1; }

		//Sentence
		public RuleCall getGivenBlocksSentenceParserRuleCall_4_1_0() { return cGivenBlocksSentenceParserRuleCall_4_1_0; }

		//("When" WhenBlocks+=Sentence ("And" WhenBlocks+=Sentence)*)?
		public Group getGroup_5() { return cGroup_5; }

		//"When"
		public Keyword getWhenKeyword_5_0() { return cWhenKeyword_5_0; }

		//WhenBlocks+=Sentence
		public Assignment getWhenBlocksAssignment_5_1() { return cWhenBlocksAssignment_5_1; }

		//Sentence
		public RuleCall getWhenBlocksSentenceParserRuleCall_5_1_0() { return cWhenBlocksSentenceParserRuleCall_5_1_0; }

		//("And" WhenBlocks+=Sentence)*
		public Group getGroup_5_2() { return cGroup_5_2; }

		//"And"
		public Keyword getAndKeyword_5_2_0() { return cAndKeyword_5_2_0; }

		//WhenBlocks+=Sentence
		public Assignment getWhenBlocksAssignment_5_2_1() { return cWhenBlocksAssignment_5_2_1; }

		//Sentence
		public RuleCall getWhenBlocksSentenceParserRuleCall_5_2_1_0() { return cWhenBlocksSentenceParserRuleCall_5_2_1_0; }

		//"Then"
		public Keyword getThenKeyword_6() { return cThenKeyword_6; }

		//ThenBlocks+=Sentence
		public Assignment getThenBlocksAssignment_7() { return cThenBlocksAssignment_7; }

		//Sentence
		public RuleCall getThenBlocksSentenceParserRuleCall_7_0() { return cThenBlocksSentenceParserRuleCall_7_0; }

		//("And" ThenBlocks+=Sentence)*
		public Group getGroup_8() { return cGroup_8; }

		//"And"
		public Keyword getAndKeyword_8_0() { return cAndKeyword_8_0; }

		//ThenBlocks+=Sentence
		public Assignment getThenBlocksAssignment_8_1() { return cThenBlocksAssignment_8_1; }

		//Sentence
		public RuleCall getThenBlocksSentenceParserRuleCall_8_1_0() { return cThenBlocksSentenceParserRuleCall_8_1_0; }

		//"Examples:"
		public Keyword getExamplesKeyword_9() { return cExamplesKeyword_9; }

		//Examples+=Example
		public Assignment getExamplesAssignment_10() { return cExamplesAssignment_10; }

		//Example
		public RuleCall getExamplesExampleParserRuleCall_10_0() { return cExamplesExampleParserRuleCall_10_0; }

		//Examples+=Example*
		public Assignment getExamplesAssignment_11() { return cExamplesAssignment_11; }

		//Example
		public RuleCall getExamplesExampleParserRuleCall_11_0() { return cExamplesExampleParserRuleCall_11_0; }
	}

	public class ReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Reference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cReferenceAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLessThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueIDTerminalRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Reference:
		//	{Reference} "<" value=ID ">";
		public ParserRule getRule() { return rule; }

		//{Reference} "<" value=ID ">"
		public Group getGroup() { return cGroup; }

		//{Reference}
		public Action getReferenceAction_0() { return cReferenceAction_0; }

		//"<"
		public Keyword getLessThanSignKeyword_1() { return cLessThanSignKeyword_1; }

		//value=ID
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//ID
		public RuleCall getValueIDTerminalRuleCall_2_0() { return cValueIDTerminalRuleCall_2_0; }

		//">"
		public Keyword getGreaterThanSignKeyword_3() { return cGreaterThanSignKeyword_3; }
	}

	public class WordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Word");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueAnyParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//Word:
		//	value=Any;
		public ParserRule getRule() { return rule; }

		//value=Any
		public Assignment getValueAssignment() { return cValueAssignment; }

		//Any
		public RuleCall getValueAnyParserRuleCall_0() { return cValueAnyParserRuleCall_0; }
	}

	public class ExampleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Example");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVerticalLineKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cKeysAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cKeysEStringParserRuleCall_1_0 = (RuleCall)cKeysAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cVerticalLineKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cKeysAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cKeysEStringParserRuleCall_2_1_0 = (RuleCall)cKeysAssignment_2_1.eContents().get(0);
		private final Keyword cVerticalLineKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cValuesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cValuesValueParserRuleCall_4_0 = (RuleCall)cValuesAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLineFeedLfKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cValuesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cValuesValueParserRuleCall_5_1_0 = (RuleCall)cValuesAssignment_5_1.eContents().get(0);
		
		//Example:
		//	"|" keys+=EString ("|" keys+=EString)* "|" values+=Value ("\n" values+=Value)*;
		public ParserRule getRule() { return rule; }

		//"|" keys+=EString ("|" keys+=EString)* "|" values+=Value ("\n" values+=Value)*
		public Group getGroup() { return cGroup; }

		//"|"
		public Keyword getVerticalLineKeyword_0() { return cVerticalLineKeyword_0; }

		//keys+=EString
		public Assignment getKeysAssignment_1() { return cKeysAssignment_1; }

		//EString
		public RuleCall getKeysEStringParserRuleCall_1_0() { return cKeysEStringParserRuleCall_1_0; }

		//("|" keys+=EString)*
		public Group getGroup_2() { return cGroup_2; }

		//"|"
		public Keyword getVerticalLineKeyword_2_0() { return cVerticalLineKeyword_2_0; }

		//keys+=EString
		public Assignment getKeysAssignment_2_1() { return cKeysAssignment_2_1; }

		//EString
		public RuleCall getKeysEStringParserRuleCall_2_1_0() { return cKeysEStringParserRuleCall_2_1_0; }

		//"|"
		public Keyword getVerticalLineKeyword_3() { return cVerticalLineKeyword_3; }

		//values+=Value
		public Assignment getValuesAssignment_4() { return cValuesAssignment_4; }

		//Value
		public RuleCall getValuesValueParserRuleCall_4_0() { return cValuesValueParserRuleCall_4_0; }

		//("\n" values+=Value)*
		public Group getGroup_5() { return cGroup_5; }

		//"\n"
		public Keyword getLineFeedLfKeyword_5_0() { return cLineFeedLfKeyword_5_0; }

		//values+=Value
		public Assignment getValuesAssignment_5_1() { return cValuesAssignment_5_1; }

		//Value
		public RuleCall getValuesValueParserRuleCall_5_1_0() { return cValuesValueParserRuleCall_5_1_0; }
	}

	public class ValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Value");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVerticalLineKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cElementsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cElementsEStringParserRuleCall_1_0 = (RuleCall)cElementsAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cVerticalLineKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cElementsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cElementsEStringParserRuleCall_2_1_0 = (RuleCall)cElementsAssignment_2_1.eContents().get(0);
		private final Keyword cVerticalLineKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Value:
		//	"|" elements+=EString ("|" elements+=EString)* "|";
		public ParserRule getRule() { return rule; }

		//"|" elements+=EString ("|" elements+=EString)* "|"
		public Group getGroup() { return cGroup; }

		//"|"
		public Keyword getVerticalLineKeyword_0() { return cVerticalLineKeyword_0; }

		//elements+=EString
		public Assignment getElementsAssignment_1() { return cElementsAssignment_1; }

		//EString
		public RuleCall getElementsEStringParserRuleCall_1_0() { return cElementsEStringParserRuleCall_1_0; }

		//("|" elements+=EString)*
		public Group getGroup_2() { return cGroup_2; }

		//"|"
		public Keyword getVerticalLineKeyword_2_0() { return cVerticalLineKeyword_2_0; }

		//elements+=EString
		public Assignment getElementsAssignment_2_1() { return cElementsAssignment_2_1; }

		//EString
		public RuleCall getElementsEStringParserRuleCall_2_1_0() { return cElementsEStringParserRuleCall_2_1_0; }

		//"|"
		public Keyword getVerticalLineKeyword_3() { return cVerticalLineKeyword_3; }
	}
	
	
	private ModelElements pModel;
	private ScenarioElements pScenario;
	private ContentElements pContent;
	private FeatureElements pFeature;
	private EStringElements pEString;
	private MAnyElements pMAny;
	private AnyElements pAny;
	private BackgroundElements pBackground;
	private BehaviorElements pBehavior;
	private SentenceElements pSentence;
	private ScenarioSpecificElements pScenarioSpecific;
	private ScenarioOutlineElements pScenarioOutline;
	private ReferenceElements pReference;
	private WordElements pWord;
	private ExampleElements pExample;
	private ValueElements pValue;
	private TerminalRule tID;
	private TerminalRule tINT;
	private TerminalRule tSTRING;
	private TerminalRule tML_COMMENT;
	private TerminalRule tSL_COMMENT;
	private TerminalRule tWS;
	private TerminalRule tANY_OTHER;
	
	private final Grammar grammar;

	@Inject
	public GherkinGrammarAccess(GrammarProvider grammarProvider) {
		this.grammar = internalFindGrammar(grammarProvider);
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("dk.itu.bddcontracts.Gherkin".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	
	//Model:
	//	{Model} (Features+=Feature Features+=Feature*)?;
	public ModelElements getModelAccess() {
		return (pModel != null) ? pModel : (pModel = new ModelElements());
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}

	//Scenario:
	//	ScenarioSpecific | ScenarioOutline;
	public ScenarioElements getScenarioAccess() {
		return (pScenario != null) ? pScenario : (pScenario = new ScenarioElements());
	}
	
	public ParserRule getScenarioRule() {
		return getScenarioAccess().getRule();
	}

	//Content:
	//	Reference | Word;
	public ContentElements getContentAccess() {
		return (pContent != null) ? pContent : (pContent = new ContentElements());
	}
	
	public ParserRule getContentRule() {
		return getContentAccess().getRule();
	}

	//Feature:
	//	"Feature:" description=EString summary=MAny? Background=Background? (Scenarios+=Scenario Scenarios+=Scenario*)?
	//	(Behaviors+=Behavior Behaviors+=Behavior*)?;
	public FeatureElements getFeatureAccess() {
		return (pFeature != null) ? pFeature : (pFeature = new FeatureElements());
	}
	
	public ParserRule getFeatureRule() {
		return getFeatureAccess().getRule();
	}

	//EString returns ecore::EString:
	//	STRING | ID | INT;
	public EStringElements getEStringAccess() {
		return (pEString != null) ? pEString : (pEString = new EStringElements());
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}

	//MAny returns ecore::EString:
	//	Any+;
	public MAnyElements getMAnyAccess() {
		return (pMAny != null) ? pMAny : (pMAny = new MAnyElements());
	}
	
	public ParserRule getMAnyRule() {
		return getMAnyAccess().getRule();
	}

	//Any returns ecore::EString:
	//	ID | INT | STRING | ANY_OTHER;
	public AnyElements getAnyAccess() {
		return (pAny != null) ? pAny : (pAny = new AnyElements());
	}
	
	public ParserRule getAnyRule() {
		return getAnyAccess().getRule();
	}

	//Background:
	//	"Background:" "Given" GivenBlocks+=Sentence ("And" GivenBlocks+=Sentence)*;
	public BackgroundElements getBackgroundAccess() {
		return (pBackground != null) ? pBackground : (pBackground = new BackgroundElements());
	}
	
	public ParserRule getBackgroundRule() {
		return getBackgroundAccess().getRule();
	}

	//Behavior:
	//	"Behavior:" description=MAny ("Requiring" RequiringBlocks+=Sentence ("And" RequiringBlocks+=Sentence)*)? ("Ensuring"
	//	EnsuringBlocks+=Sentence ("And" EnsuringBlocks+=Sentence)*)?;
	public BehaviorElements getBehaviorAccess() {
		return (pBehavior != null) ? pBehavior : (pBehavior = new BehaviorElements());
	}
	
	public ParserRule getBehaviorRule() {
		return getBehaviorAccess().getRule();
	}

	//Sentence:
	//	words+=Content words+=Content*;
	public SentenceElements getSentenceAccess() {
		return (pSentence != null) ? pSentence : (pSentence = new SentenceElements());
	}
	
	public ParserRule getSentenceRule() {
		return getSentenceAccess().getRule();
	}

	//ScenarioSpecific:
	//	"Scenario:" description=MAny "Given" GivenBlocks+=Sentence ("And" GivenBlocks+=Sentence)* ("When" WhenBlocks+=Sentence
	//	("And" WhenBlocks+=Sentence)*)? "Then" ThenBlocks+=Sentence ("And" ThenBlocks+=Sentence)*;
	public ScenarioSpecificElements getScenarioSpecificAccess() {
		return (pScenarioSpecific != null) ? pScenarioSpecific : (pScenarioSpecific = new ScenarioSpecificElements());
	}
	
	public ParserRule getScenarioSpecificRule() {
		return getScenarioSpecificAccess().getRule();
	}

	//ScenarioOutline:
	//	"Scenario Outline:" description=MAny "Given" GivenBlocks+=Sentence ("And" GivenBlocks+=Sentence)* ("When"
	//	WhenBlocks+=Sentence ("And" WhenBlocks+=Sentence)*)? "Then" ThenBlocks+=Sentence ("And" ThenBlocks+=Sentence)*
	//	"Examples:" Examples+=Example Examples+=Example*;
	public ScenarioOutlineElements getScenarioOutlineAccess() {
		return (pScenarioOutline != null) ? pScenarioOutline : (pScenarioOutline = new ScenarioOutlineElements());
	}
	
	public ParserRule getScenarioOutlineRule() {
		return getScenarioOutlineAccess().getRule();
	}

	//Reference:
	//	{Reference} "<" value=ID ">";
	public ReferenceElements getReferenceAccess() {
		return (pReference != null) ? pReference : (pReference = new ReferenceElements());
	}
	
	public ParserRule getReferenceRule() {
		return getReferenceAccess().getRule();
	}

	//Word:
	//	value=Any;
	public WordElements getWordAccess() {
		return (pWord != null) ? pWord : (pWord = new WordElements());
	}
	
	public ParserRule getWordRule() {
		return getWordAccess().getRule();
	}

	//Example:
	//	"|" keys+=EString ("|" keys+=EString)* "|" values+=Value ("\n" values+=Value)*;
	public ExampleElements getExampleAccess() {
		return (pExample != null) ? pExample : (pExample = new ExampleElements());
	}
	
	public ParserRule getExampleRule() {
		return getExampleAccess().getRule();
	}

	//Value:
	//	"|" elements+=EString ("|" elements+=EString)* "|";
	public ValueElements getValueAccess() {
		return (pValue != null) ? pValue : (pValue = new ValueElements());
	}
	
	public ParserRule getValueRule() {
		return getValueAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return (tID != null) ? tID : (tID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "ID"));
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return (tINT != null) ? tINT : (tINT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "INT"));
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return (tSTRING != null) ? tSTRING : (tSTRING = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "STRING"));
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return (tML_COMMENT != null) ? tML_COMMENT : (tML_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "ML_COMMENT"));
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return (tSL_COMMENT != null) ? tSL_COMMENT : (tSL_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "SL_COMMENT"));
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return (tWS != null) ? tWS : (tWS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "WS"));
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return (tANY_OTHER != null) ? tANY_OTHER : (tANY_OTHER = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "ANY_OTHER"));
	} 
}
