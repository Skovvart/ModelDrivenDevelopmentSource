/*
* generated by Xtext
*/
grammar InternalGherkin;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package dk.itu.bddcontracts.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package dk.itu.bddcontracts.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import dk.itu.bddcontracts.services.GherkinGrammarAccess;

}

@parser::members {

 	private GherkinGrammarAccess grammarAccess;
 	
    public InternalGherkinParser(TokenStream input, GherkinGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected GherkinGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getModelAccess().getModelAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getFeaturesFeatureParserRuleCall_1_0_0()); 
	    }
		lv_Features_1_0=ruleFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"Features",
        		lv_Features_1_0, 
        		"Feature");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getFeaturesFeatureParserRuleCall_1_1_0()); 
	    }
		lv_Features_2_0=ruleFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"Features",
        		lv_Features_2_0, 
        		"Feature");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?)
;





// Entry rule entryRuleScenario
entryRuleScenario returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getScenarioRule()); }
	 iv_ruleScenario=ruleScenario 
	 { $current=$iv_ruleScenario.current; } 
	 EOF 
;

// Rule Scenario
ruleScenario returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getScenarioAccess().getScenarioSpecificParserRuleCall_0()); 
    }
    this_ScenarioSpecific_0=ruleScenarioSpecific
    { 
        $current = $this_ScenarioSpecific_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getScenarioAccess().getScenarioOutlineParserRuleCall_1()); 
    }
    this_ScenarioOutline_1=ruleScenarioOutline
    { 
        $current = $this_ScenarioOutline_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleContent
entryRuleContent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getContentRule()); }
	 iv_ruleContent=ruleContent 
	 { $current=$iv_ruleContent.current; } 
	 EOF 
;

// Rule Content
ruleContent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getContentAccess().getReferenceParserRuleCall_0()); 
    }
    this_Reference_0=ruleReference
    { 
        $current = $this_Reference_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getContentAccess().getWordParserRuleCall_1()); 
    }
    this_Word_1=ruleWord
    { 
        $current = $this_Word_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleFeature
entryRuleFeature returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFeatureRule()); }
	 iv_ruleFeature=ruleFeature 
	 { $current=$iv_ruleFeature.current; } 
	 EOF 
;

// Rule Feature
ruleFeature returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Feature:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFeatureAccess().getFeatureKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFeatureAccess().getDescriptionEStringParserRuleCall_1_0()); 
	    }
		lv_description_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFeatureRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFeatureAccess().getSummaryMAnyParserRuleCall_2_0()); 
	    }
		lv_summary_2_0=ruleMAny		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFeatureRule());
	        }
       		set(
       			$current, 
       			"summary",
        		lv_summary_2_0, 
        		"MAny");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getFeatureAccess().getBackgroundBackgroundParserRuleCall_3_0()); 
	    }
		lv_Background_3_0=ruleBackground		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFeatureRule());
	        }
       		set(
       			$current, 
       			"Background",
        		lv_Background_3_0, 
        		"Background");
	        afterParserOrEnumRuleCall();
	    }

)
)?((
(
		{ 
	        newCompositeNode(grammarAccess.getFeatureAccess().getScenariosScenarioParserRuleCall_4_0_0()); 
	    }
		lv_Scenarios_4_0=ruleScenario		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFeatureRule());
	        }
       		add(
       			$current, 
       			"Scenarios",
        		lv_Scenarios_4_0, 
        		"Scenario");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFeatureAccess().getScenariosScenarioParserRuleCall_4_1_0()); 
	    }
		lv_Scenarios_5_0=ruleScenario		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFeatureRule());
	        }
       		add(
       			$current, 
       			"Scenarios",
        		lv_Scenarios_5_0, 
        		"Scenario");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?((
(
		{ 
	        newCompositeNode(grammarAccess.getFeatureAccess().getBehaviorsBehaviorParserRuleCall_5_0_0()); 
	    }
		lv_Behaviors_6_0=ruleBehavior		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFeatureRule());
	        }
       		add(
       			$current, 
       			"Behaviors",
        		lv_Behaviors_6_0, 
        		"Behavior");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFeatureAccess().getBehaviorsBehaviorParserRuleCall_5_1_0()); 
	    }
		lv_Behaviors_7_0=ruleBehavior		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFeatureRule());
	        }
       		add(
       			$current, 
       			"Behaviors",
        		lv_Behaviors_7_0, 
        		"Behavior");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?)
;





// Entry rule entryRuleEString
entryRuleEString returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEStringRule()); } 
	 iv_ruleEString=ruleEString 
	 { $current=$iv_ruleEString.current.getText(); }  
	 EOF 
;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); 
    }

    |    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 
    }

    |    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getEStringAccess().getINTTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleMAny
entryRuleMAny returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMAnyRule()); } 
	 iv_ruleMAny=ruleMAny 
	 { $current=$iv_ruleMAny.current.getText(); }  
	 EOF 
;

// Rule MAny
ruleMAny returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMAnyAccess().getAnyParserRuleCall()); 
    }
    this_Any_0=ruleAny    {
		$current.merge(this_Any_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)+
    ;





// Entry rule entryRuleAny
entryRuleAny returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnyRule()); } 
	 iv_ruleAny=ruleAny 
	 { $current=$iv_ruleAny.current.getText(); }  
	 EOF 
;

// Rule Any
ruleAny returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getAnyAccess().getIDTerminalRuleCall_0()); 
    }

    |    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getAnyAccess().getINTTerminalRuleCall_1()); 
    }

    |    this_STRING_2=RULE_STRING    {
		$current.merge(this_STRING_2);
    }

    { 
    newLeafNode(this_STRING_2, grammarAccess.getAnyAccess().getSTRINGTerminalRuleCall_2()); 
    }

    |    this_ANY_OTHER_3=RULE_ANY_OTHER    {
		$current.merge(this_ANY_OTHER_3);
    }

    { 
    newLeafNode(this_ANY_OTHER_3, grammarAccess.getAnyAccess().getANY_OTHERTerminalRuleCall_3()); 
    }
)
    ;





// Entry rule entryRuleBackground
entryRuleBackground returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBackgroundRule()); }
	 iv_ruleBackground=ruleBackground 
	 { $current=$iv_ruleBackground.current; } 
	 EOF 
;

// Rule Background
ruleBackground returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Background:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBackgroundAccess().getBackgroundKeyword_0());
    }
	otherlv_1='Given' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBackgroundAccess().getGivenKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBackgroundAccess().getGivenBlocksSentenceParserRuleCall_2_0()); 
	    }
		lv_GivenBlocks_2_0=ruleSentence		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBackgroundRule());
	        }
       		add(
       			$current, 
       			"GivenBlocks",
        		lv_GivenBlocks_2_0, 
        		"Sentence");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3='And' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBackgroundAccess().getAndKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBackgroundAccess().getGivenBlocksSentenceParserRuleCall_3_1_0()); 
	    }
		lv_GivenBlocks_4_0=ruleSentence		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBackgroundRule());
	        }
       		add(
       			$current, 
       			"GivenBlocks",
        		lv_GivenBlocks_4_0, 
        		"Sentence");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleBehavior
entryRuleBehavior returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBehaviorRule()); }
	 iv_ruleBehavior=ruleBehavior 
	 { $current=$iv_ruleBehavior.current; } 
	 EOF 
;

// Rule Behavior
ruleBehavior returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Behavior:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBehaviorAccess().getBehaviorKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBehaviorAccess().getDescriptionMAnyParserRuleCall_1_0()); 
	    }
		lv_description_1_0=ruleMAny		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBehaviorRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_1_0, 
        		"MAny");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2='Requiring' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBehaviorAccess().getRequiringKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBehaviorAccess().getRequiringBlocksSentenceParserRuleCall_2_1_0()); 
	    }
		lv_RequiringBlocks_3_0=ruleSentence		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBehaviorRule());
	        }
       		add(
       			$current, 
       			"RequiringBlocks",
        		lv_RequiringBlocks_3_0, 
        		"Sentence");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4='And' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getBehaviorAccess().getAndKeyword_2_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBehaviorAccess().getRequiringBlocksSentenceParserRuleCall_2_2_1_0()); 
	    }
		lv_RequiringBlocks_5_0=ruleSentence		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBehaviorRule());
	        }
       		add(
       			$current, 
       			"RequiringBlocks",
        		lv_RequiringBlocks_5_0, 
        		"Sentence");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?(	otherlv_6='Ensuring' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getBehaviorAccess().getEnsuringKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBehaviorAccess().getEnsuringBlocksSentenceParserRuleCall_3_1_0()); 
	    }
		lv_EnsuringBlocks_7_0=ruleSentence		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBehaviorRule());
	        }
       		add(
       			$current, 
       			"EnsuringBlocks",
        		lv_EnsuringBlocks_7_0, 
        		"Sentence");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_8='And' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getBehaviorAccess().getAndKeyword_3_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBehaviorAccess().getEnsuringBlocksSentenceParserRuleCall_3_2_1_0()); 
	    }
		lv_EnsuringBlocks_9_0=ruleSentence		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBehaviorRule());
	        }
       		add(
       			$current, 
       			"EnsuringBlocks",
        		lv_EnsuringBlocks_9_0, 
        		"Sentence");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?)
;





// Entry rule entryRuleSentence
entryRuleSentence returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSentenceRule()); }
	 iv_ruleSentence=ruleSentence 
	 { $current=$iv_ruleSentence.current; } 
	 EOF 
;

// Rule Sentence
ruleSentence returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSentenceAccess().getWordsContentParserRuleCall_0_0()); 
	    }
		lv_words_0_0=ruleContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSentenceRule());
	        }
       		add(
       			$current, 
       			"words",
        		lv_words_0_0, 
        		"Content");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSentenceAccess().getWordsContentParserRuleCall_1_0()); 
	    }
		lv_words_1_0=ruleContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSentenceRule());
	        }
       		add(
       			$current, 
       			"words",
        		lv_words_1_0, 
        		"Content");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleScenarioSpecific
entryRuleScenarioSpecific returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getScenarioSpecificRule()); }
	 iv_ruleScenarioSpecific=ruleScenarioSpecific 
	 { $current=$iv_ruleScenarioSpecific.current; } 
	 EOF 
;

// Rule ScenarioSpecific
ruleScenarioSpecific returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Scenario:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getScenarioSpecificAccess().getScenarioKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScenarioSpecificAccess().getDescriptionMAnyParserRuleCall_1_0()); 
	    }
		lv_description_1_0=ruleMAny		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScenarioSpecificRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_1_0, 
        		"MAny");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='Given' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getScenarioSpecificAccess().getGivenKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScenarioSpecificAccess().getGivenBlocksSentenceParserRuleCall_3_0()); 
	    }
		lv_GivenBlocks_3_0=ruleSentence		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScenarioSpecificRule());
	        }
       		add(
       			$current, 
       			"GivenBlocks",
        		lv_GivenBlocks_3_0, 
        		"Sentence");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4='And' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getScenarioSpecificAccess().getAndKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScenarioSpecificAccess().getGivenBlocksSentenceParserRuleCall_4_1_0()); 
	    }
		lv_GivenBlocks_5_0=ruleSentence		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScenarioSpecificRule());
	        }
       		add(
       			$current, 
       			"GivenBlocks",
        		lv_GivenBlocks_5_0, 
        		"Sentence");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_6='When' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getScenarioSpecificAccess().getWhenKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScenarioSpecificAccess().getWhenBlocksSentenceParserRuleCall_5_1_0()); 
	    }
		lv_WhenBlocks_7_0=ruleSentence		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScenarioSpecificRule());
	        }
       		add(
       			$current, 
       			"WhenBlocks",
        		lv_WhenBlocks_7_0, 
        		"Sentence");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_8='And' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getScenarioSpecificAccess().getAndKeyword_5_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScenarioSpecificAccess().getWhenBlocksSentenceParserRuleCall_5_2_1_0()); 
	    }
		lv_WhenBlocks_9_0=ruleSentence		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScenarioSpecificRule());
	        }
       		add(
       			$current, 
       			"WhenBlocks",
        		lv_WhenBlocks_9_0, 
        		"Sentence");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_10='Then' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getScenarioSpecificAccess().getThenKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScenarioSpecificAccess().getThenBlocksSentenceParserRuleCall_7_0()); 
	    }
		lv_ThenBlocks_11_0=ruleSentence		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScenarioSpecificRule());
	        }
       		add(
       			$current, 
       			"ThenBlocks",
        		lv_ThenBlocks_11_0, 
        		"Sentence");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_12='And' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getScenarioSpecificAccess().getAndKeyword_8_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScenarioSpecificAccess().getThenBlocksSentenceParserRuleCall_8_1_0()); 
	    }
		lv_ThenBlocks_13_0=ruleSentence		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScenarioSpecificRule());
	        }
       		add(
       			$current, 
       			"ThenBlocks",
        		lv_ThenBlocks_13_0, 
        		"Sentence");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleScenarioOutline
entryRuleScenarioOutline returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getScenarioOutlineRule()); }
	 iv_ruleScenarioOutline=ruleScenarioOutline 
	 { $current=$iv_ruleScenarioOutline.current; } 
	 EOF 
;

// Rule ScenarioOutline
ruleScenarioOutline returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Scenario Outline:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getScenarioOutlineAccess().getScenarioOutlineKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScenarioOutlineAccess().getDescriptionMAnyParserRuleCall_1_0()); 
	    }
		lv_description_1_0=ruleMAny		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScenarioOutlineRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_1_0, 
        		"MAny");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='Given' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getScenarioOutlineAccess().getGivenKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScenarioOutlineAccess().getGivenBlocksSentenceParserRuleCall_3_0()); 
	    }
		lv_GivenBlocks_3_0=ruleSentence		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScenarioOutlineRule());
	        }
       		add(
       			$current, 
       			"GivenBlocks",
        		lv_GivenBlocks_3_0, 
        		"Sentence");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4='And' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getScenarioOutlineAccess().getAndKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScenarioOutlineAccess().getGivenBlocksSentenceParserRuleCall_4_1_0()); 
	    }
		lv_GivenBlocks_5_0=ruleSentence		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScenarioOutlineRule());
	        }
       		add(
       			$current, 
       			"GivenBlocks",
        		lv_GivenBlocks_5_0, 
        		"Sentence");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_6='When' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getScenarioOutlineAccess().getWhenKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScenarioOutlineAccess().getWhenBlocksSentenceParserRuleCall_5_1_0()); 
	    }
		lv_WhenBlocks_7_0=ruleSentence		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScenarioOutlineRule());
	        }
       		add(
       			$current, 
       			"WhenBlocks",
        		lv_WhenBlocks_7_0, 
        		"Sentence");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_8='And' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getScenarioOutlineAccess().getAndKeyword_5_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScenarioOutlineAccess().getWhenBlocksSentenceParserRuleCall_5_2_1_0()); 
	    }
		lv_WhenBlocks_9_0=ruleSentence		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScenarioOutlineRule());
	        }
       		add(
       			$current, 
       			"WhenBlocks",
        		lv_WhenBlocks_9_0, 
        		"Sentence");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_10='Then' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getScenarioOutlineAccess().getThenKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScenarioOutlineAccess().getThenBlocksSentenceParserRuleCall_7_0()); 
	    }
		lv_ThenBlocks_11_0=ruleSentence		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScenarioOutlineRule());
	        }
       		add(
       			$current, 
       			"ThenBlocks",
        		lv_ThenBlocks_11_0, 
        		"Sentence");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_12='And' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getScenarioOutlineAccess().getAndKeyword_8_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScenarioOutlineAccess().getThenBlocksSentenceParserRuleCall_8_1_0()); 
	    }
		lv_ThenBlocks_13_0=ruleSentence		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScenarioOutlineRule());
	        }
       		add(
       			$current, 
       			"ThenBlocks",
        		lv_ThenBlocks_13_0, 
        		"Sentence");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_14='Examples:' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getScenarioOutlineAccess().getExamplesKeyword_9());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScenarioOutlineAccess().getExamplesExampleParserRuleCall_10_0()); 
	    }
		lv_Examples_15_0=ruleExample		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScenarioOutlineRule());
	        }
       		add(
       			$current, 
       			"Examples",
        		lv_Examples_15_0, 
        		"Example");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getScenarioOutlineAccess().getExamplesExampleParserRuleCall_11_0()); 
	    }
		lv_Examples_16_0=ruleExample		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScenarioOutlineRule());
	        }
       		add(
       			$current, 
       			"Examples",
        		lv_Examples_16_0, 
        		"Example");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleReference
entryRuleReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReferenceRule()); }
	 iv_ruleReference=ruleReference 
	 { $current=$iv_ruleReference.current; } 
	 EOF 
;

// Rule Reference
ruleReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getReferenceAccess().getReferenceAction_0(),
            $current);
    }
)	otherlv_1='<' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getReferenceAccess().getLessThanSignKeyword_1());
    }
(
(
		lv_value_2_0=RULE_ID
		{
			newLeafNode(lv_value_2_0, grammarAccess.getReferenceAccess().getValueIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getReferenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"ID");
	    }

)
)	otherlv_3='>' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getReferenceAccess().getGreaterThanSignKeyword_3());
    }
)
;





// Entry rule entryRuleWord
entryRuleWord returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWordRule()); }
	 iv_ruleWord=ruleWord 
	 { $current=$iv_ruleWord.current; } 
	 EOF 
;

// Rule Word
ruleWord returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getWordAccess().getValueAnyParserRuleCall_0()); 
	    }
		lv_value_0_0=ruleAny		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWordRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"Any");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleExample
entryRuleExample returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExampleRule()); }
	 iv_ruleExample=ruleExample 
	 { $current=$iv_ruleExample.current; } 
	 EOF 
;

// Rule Example
ruleExample returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='|' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExampleAccess().getVerticalLineKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExampleAccess().getKeysEStringParserRuleCall_1_0()); 
	    }
		lv_keys_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExampleRule());
	        }
       		add(
       			$current, 
       			"keys",
        		lv_keys_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2='|' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getExampleAccess().getVerticalLineKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExampleAccess().getKeysEStringParserRuleCall_2_1_0()); 
	    }
		lv_keys_3_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExampleRule());
	        }
       		add(
       			$current, 
       			"keys",
        		lv_keys_3_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_4='|' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getExampleAccess().getVerticalLineKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExampleAccess().getValuesValueParserRuleCall_4_0()); 
	    }
		lv_values_5_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExampleRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_5_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6='\n' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getExampleAccess().getLineFeedLfKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExampleAccess().getValuesValueParserRuleCall_5_1_0()); 
	    }
		lv_values_7_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExampleRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_7_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleValue
entryRuleValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getValueRule()); }
	 iv_ruleValue=ruleValue 
	 { $current=$iv_ruleValue.current; } 
	 EOF 
;

// Rule Value
ruleValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='|' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getValueAccess().getVerticalLineKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getValueAccess().getElementsEStringParserRuleCall_1_0()); 
	    }
		lv_elements_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValueRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2='|' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getValueAccess().getVerticalLineKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getValueAccess().getElementsEStringParserRuleCall_2_1_0()); 
	    }
		lv_elements_3_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValueRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_3_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_4='|' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getValueAccess().getVerticalLineKeyword_3());
    }
)
;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


