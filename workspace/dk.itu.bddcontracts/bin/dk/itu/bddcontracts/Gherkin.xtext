// Gherkin
// automatically generated by Xtext
grammar dk.itu.bddcontracts.Gherkin hidden(WS, ML_COMMENT, SL_COMMENT)

import "platform:/resource/BDDContracts/model/BDDModel.ecore" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore



Model returns Model:
	{Model}
	( Features+=Feature (Features+=Feature)* )?;

Scenario returns Scenario:
	ScenarioSpecific | ScenarioOutline;

Content returns Content:
	Reference | Word;

Feature returns Feature:
	"Feature:" description=EString
		(summary=MAny)?
	    (Background=Background)?
	    (Scenarios+=Scenario (Scenarios += Scenario)*)?
		(Behaviors+=Behavior (Behaviors += Behavior)*)?
	;

EString returns ecore::EString:
	STRING | ID | INT;
	
MAny returns ecore::EString:
	Any+
;

Any returns ecore::EString:
	ID | INT | STRING | ANY_OTHER
;

Background returns Background:
	"Background:"
		'Given' GivenBlocks+=Sentence ( 'And' GivenBlocks+=Sentence )*
	;

Behavior returns Behavior:
	"Behavior:" description=MAny
		('Requiring' RequiringBlocks+=Sentence ( "And" RequiringBlocks+=Sentence)*)?
		('Ensuring' EnsuringBlocks+=Sentence ( "And" EnsuringBlocks+=Sentence)*)? 
	;

Sentence returns Sentence:
	  words+=Content (words+=Content)*  
	;

ScenarioSpecific returns ScenarioSpecific:
	"Scenario:" description=MAny
		'Given' GivenBlocks+=Sentence ( "And" GivenBlocks+=Sentence)*		
		('When' WhenBlocks+=Sentence ( "And" WhenBlocks+=Sentence)* )?
		'Then' ThenBlocks+=Sentence ( "And" ThenBlocks+=Sentence)* 
	;

ScenarioOutline returns ScenarioOutline:
	"Scenario Outline:" description=MAny
		'Given' GivenBlocks+=Sentence ( "And" GivenBlocks+=Sentence)*
		('When' WhenBlocks+=Sentence ( "And" WhenBlocks+=Sentence)* )?
		'Then' ThenBlocks+=Sentence ( "And" ThenBlocks+=Sentence)*
		'Examples:' Examples+=Example ( Examples+=Example )* 
	;

Reference returns Reference:
	{Reference}
	'<' value=ID '>';

Word returns Word:
	value=Any;

Example returns Example:
		'|' keys+=EString ( '|' keys+=EString )* '|'
		 	values+=Value ('\n' values+=Value)*  
		;

Value returns Value:
	'|' elements+=EString ( '|' elements+=EString )* '|'
	;

terminal ID  		: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
terminal INT returns ecore::EInt: ('0'..'9')+;
terminal STRING	: 
			'"' ( '\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\') | !('\\'|'"') )* '"' |
			"'" ( '\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\') | !('\\'|"'") )* "'"
		; 
terminal ML_COMMENT	: '/*' -> '*/';
terminal SL_COMMENT 	: '//' !('\n'|'\r')* ('\r'? '\n')?;

terminal WS			: (' '|'\t'|'\r'|'\n')+;

terminal ANY_OTHER: .;