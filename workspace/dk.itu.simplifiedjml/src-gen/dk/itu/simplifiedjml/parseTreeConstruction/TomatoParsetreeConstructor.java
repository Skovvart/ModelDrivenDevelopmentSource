/*
* generated by Xtext
*/
package dk.itu.simplifiedjml.parseTreeConstruction;

import org.eclipse.emf.ecore.*;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parsetree.reconstr.IEObjectConsumer;
import org.eclipse.xtext.parsetree.reconstr.impl.AbstractParseTreeConstructor;

import dk.itu.simplifiedjml.services.TomatoGrammarAccess;

import com.google.inject.Inject;

@SuppressWarnings("all")
public class TomatoParsetreeConstructor extends AbstractParseTreeConstructor {
		
	@Inject
	private TomatoGrammarAccess grammarAccess;
	
	@Override
	protected AbstractToken getRootToken(IEObjectConsumer inst) {
		return new ThisRootNode(inst);	
	}
	
protected class ThisRootNode extends RootToken {
	public ThisRootNode(IEObjectConsumer inst) {
		super(inst);
	}
	
	@Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SimplifiedJMLModel_Group(this, this, 0, inst);
			case 1: return new Structure_Group(this, this, 1, inst);
			case 2: return new Method_Group(this, this, 2, inst);
			default: return null;
		}	
	}	
}
	

/************ begin Rule SimplifiedJMLModel ****************
 *
 * SimplifiedJMLModel:
 * 	structures+=Structure structures+=Structure*;
 *
 **/

// structures+=Structure structures+=Structure*
protected class SimplifiedJMLModel_Group extends GroupToken {
	
	public SimplifiedJMLModel_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSimplifiedJMLModelAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SimplifiedJMLModel_StructuresAssignment_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SimplifiedJMLModel_StructuresAssignment_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSimplifiedJMLModelRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// structures+=Structure
protected class SimplifiedJMLModel_StructuresAssignment_0 extends AssignmentToken  {
	
	public SimplifiedJMLModel_StructuresAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSimplifiedJMLModelAccess().getStructuresAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Structure_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("structures",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("structures");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getStructureRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSimplifiedJMLModelAccess().getStructuresStructureParserRuleCall_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// structures+=Structure*
protected class SimplifiedJMLModel_StructuresAssignment_1 extends AssignmentToken  {
	
	public SimplifiedJMLModel_StructuresAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSimplifiedJMLModelAccess().getStructuresAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Structure_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("structures",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("structures");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getStructureRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSimplifiedJMLModelAccess().getStructuresStructureParserRuleCall_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SimplifiedJMLModel_StructuresAssignment_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SimplifiedJMLModel_StructuresAssignment_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


/************ end Rule SimplifiedJMLModel ****************/


/************ begin Rule Structure ****************
 *
 * Structure:
 * 	{Structure} "class" name=EString "{" ("//@ invariant" invariants+=AnyOther ("//@ invariant" invariants+=AnyOther)*)?
 * 	(methods+=Method methods+=Method*)? "}";
 *
 **/

// {Structure} "class" name=EString "{" ("//@ invariant" invariants+=AnyOther ("//@ invariant" invariants+=AnyOther)*)?
// (methods+=Method methods+=Method*)? "}"
protected class Structure_Group extends GroupToken {
	
	public Structure_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getStructureAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Structure_RightCurlyBracketKeyword_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getStructureAccess().getStructureAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {Structure}
protected class Structure_StructureAction_0 extends ActionToken  {

	public Structure_StructureAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getStructureAccess().getStructureAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "class"
protected class Structure_ClassKeyword_1 extends KeywordToken  {
	
	public Structure_ClassKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getStructureAccess().getClassKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Structure_StructureAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=EString
protected class Structure_NameAssignment_2 extends AssignmentToken  {
	
	public Structure_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getStructureAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Structure_ClassKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getStructureAccess().getNameEStringParserRuleCall_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getStructureAccess().getNameEStringParserRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class Structure_LeftCurlyBracketKeyword_3 extends KeywordToken  {
	
	public Structure_LeftCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getStructureAccess().getLeftCurlyBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Structure_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ("//@ invariant" invariants+=AnyOther ("//@ invariant" invariants+=AnyOther)*)?
protected class Structure_Group_4 extends GroupToken {
	
	public Structure_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getStructureAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Structure_Group_4_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Structure_InvariantsAssignment_4_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// "//@ invariant"
protected class Structure_InvariantKeyword_4_0 extends KeywordToken  {
	
	public Structure_InvariantKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getStructureAccess().getInvariantKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Structure_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// invariants+=AnyOther
protected class Structure_InvariantsAssignment_4_1 extends AssignmentToken  {
	
	public Structure_InvariantsAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getStructureAccess().getInvariantsAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Structure_InvariantKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("invariants",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("invariants");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getStructureAccess().getInvariantsAnyOtherParserRuleCall_4_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getStructureAccess().getInvariantsAnyOtherParserRuleCall_4_1_0();
			return obj;
		}
		return null;
	}

}

// ("//@ invariant" invariants+=AnyOther)*
protected class Structure_Group_4_2 extends GroupToken {
	
	public Structure_Group_4_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getStructureAccess().getGroup_4_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Structure_InvariantsAssignment_4_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "//@ invariant"
protected class Structure_InvariantKeyword_4_2_0 extends KeywordToken  {
	
	public Structure_InvariantKeyword_4_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getStructureAccess().getInvariantKeyword_4_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Structure_Group_4_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Structure_InvariantsAssignment_4_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// invariants+=AnyOther
protected class Structure_InvariantsAssignment_4_2_1 extends AssignmentToken  {
	
	public Structure_InvariantsAssignment_4_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getStructureAccess().getInvariantsAssignment_4_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Structure_InvariantKeyword_4_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("invariants",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("invariants");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getStructureAccess().getInvariantsAnyOtherParserRuleCall_4_2_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getStructureAccess().getInvariantsAnyOtherParserRuleCall_4_2_1_0();
			return obj;
		}
		return null;
	}

}



// (methods+=Method methods+=Method*)?
protected class Structure_Group_5 extends GroupToken {
	
	public Structure_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getStructureAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Structure_MethodsAssignment_5_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Structure_MethodsAssignment_5_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// methods+=Method
protected class Structure_MethodsAssignment_5_0 extends AssignmentToken  {
	
	public Structure_MethodsAssignment_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getStructureAccess().getMethodsAssignment_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Method_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("methods",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("methods");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMethodRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getStructureAccess().getMethodsMethodParserRuleCall_5_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Structure_Group_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Structure_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// methods+=Method*
protected class Structure_MethodsAssignment_5_1 extends AssignmentToken  {
	
	public Structure_MethodsAssignment_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getStructureAccess().getMethodsAssignment_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Method_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("methods",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("methods");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMethodRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getStructureAccess().getMethodsMethodParserRuleCall_5_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Structure_MethodsAssignment_5_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Structure_MethodsAssignment_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "}"
protected class Structure_RightCurlyBracketKeyword_6 extends KeywordToken  {
	
	public Structure_RightCurlyBracketKeyword_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getStructureAccess().getRightCurlyBracketKeyword_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Structure_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Structure_Group_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Structure_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}


/************ end Rule Structure ****************/


/************ begin Rule Method ****************
 *
 * Method:
 * 	{Method} ("//@ requires" requirements+=AnyOther "\n" ("//@ requires" requirements+=AnyOther "\n")*)? ("//@ ensures"
 * 	ensures+=AnyOther "\n" ("//@ ensures" ensures+=AnyOther "\n")*)? "/ *< AUTO GENERATED >* /" signature=HackySignature "{"
 * 	"/ * TODO: Implementation * /" "throw new UnsupportedOperationException(\"Not Implemented\");" "}";
 *
 **/

// {Method} ("//@ requires" requirements+=AnyOther "\n" ("//@ requires" requirements+=AnyOther "\n")*)? ("//@ ensures"
// ensures+=AnyOther "\n" ("//@ ensures" ensures+=AnyOther "\n")*)? "/ *< AUTO GENERATED >* /" signature=HackySignature "{"
// "/ * TODO: Implementation * /" "throw new UnsupportedOperationException(\"Not Implemented\");" "}"
protected class Method_Group extends GroupToken {
	
	public Method_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMethodAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Method_RightCurlyBracketKeyword_8(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMethodAccess().getMethodAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {Method}
protected class Method_MethodAction_0 extends ActionToken  {

	public Method_MethodAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getMethodAccess().getMethodAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// ("//@ requires" requirements+=AnyOther "\n" ("//@ requires" requirements+=AnyOther "\n")*)?
protected class Method_Group_1 extends GroupToken {
	
	public Method_Group_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMethodAccess().getGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Method_Group_1_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Method_LineFeedLfKeyword_1_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// "//@ requires"
protected class Method_RequiresKeyword_1_0 extends KeywordToken  {
	
	public Method_RequiresKeyword_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMethodAccess().getRequiresKeyword_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Method_MethodAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// requirements+=AnyOther
protected class Method_RequirementsAssignment_1_1 extends AssignmentToken  {
	
	public Method_RequirementsAssignment_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMethodAccess().getRequirementsAssignment_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Method_RequiresKeyword_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("requirements",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("requirements");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMethodAccess().getRequirementsAnyOtherParserRuleCall_1_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getMethodAccess().getRequirementsAnyOtherParserRuleCall_1_1_0();
			return obj;
		}
		return null;
	}

}

// "\n"
protected class Method_LineFeedLfKeyword_1_2 extends KeywordToken  {
	
	public Method_LineFeedLfKeyword_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMethodAccess().getLineFeedLfKeyword_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Method_RequirementsAssignment_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ("//@ requires" requirements+=AnyOther "\n")*
protected class Method_Group_1_3 extends GroupToken {
	
	public Method_Group_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMethodAccess().getGroup_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Method_LineFeedLfKeyword_1_3_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "//@ requires"
protected class Method_RequiresKeyword_1_3_0 extends KeywordToken  {
	
	public Method_RequiresKeyword_1_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMethodAccess().getRequiresKeyword_1_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Method_Group_1_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Method_LineFeedLfKeyword_1_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// requirements+=AnyOther
protected class Method_RequirementsAssignment_1_3_1 extends AssignmentToken  {
	
	public Method_RequirementsAssignment_1_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMethodAccess().getRequirementsAssignment_1_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Method_RequiresKeyword_1_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("requirements",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("requirements");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMethodAccess().getRequirementsAnyOtherParserRuleCall_1_3_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getMethodAccess().getRequirementsAnyOtherParserRuleCall_1_3_1_0();
			return obj;
		}
		return null;
	}

}

// "\n"
protected class Method_LineFeedLfKeyword_1_3_2 extends KeywordToken  {
	
	public Method_LineFeedLfKeyword_1_3_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMethodAccess().getLineFeedLfKeyword_1_3_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Method_RequirementsAssignment_1_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// ("//@ ensures" ensures+=AnyOther "\n" ("//@ ensures" ensures+=AnyOther "\n")*)?
protected class Method_Group_2 extends GroupToken {
	
	public Method_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMethodAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Method_Group_2_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Method_LineFeedLfKeyword_2_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// "//@ ensures"
protected class Method_EnsuresKeyword_2_0 extends KeywordToken  {
	
	public Method_EnsuresKeyword_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMethodAccess().getEnsuresKeyword_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Method_Group_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Method_MethodAction_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ensures+=AnyOther
protected class Method_EnsuresAssignment_2_1 extends AssignmentToken  {
	
	public Method_EnsuresAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMethodAccess().getEnsuresAssignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Method_EnsuresKeyword_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ensures",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ensures");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMethodAccess().getEnsuresAnyOtherParserRuleCall_2_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getMethodAccess().getEnsuresAnyOtherParserRuleCall_2_1_0();
			return obj;
		}
		return null;
	}

}

// "\n"
protected class Method_LineFeedLfKeyword_2_2 extends KeywordToken  {
	
	public Method_LineFeedLfKeyword_2_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMethodAccess().getLineFeedLfKeyword_2_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Method_EnsuresAssignment_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ("//@ ensures" ensures+=AnyOther "\n")*
protected class Method_Group_2_3 extends GroupToken {
	
	public Method_Group_2_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMethodAccess().getGroup_2_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Method_LineFeedLfKeyword_2_3_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "//@ ensures"
protected class Method_EnsuresKeyword_2_3_0 extends KeywordToken  {
	
	public Method_EnsuresKeyword_2_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMethodAccess().getEnsuresKeyword_2_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Method_Group_2_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Method_LineFeedLfKeyword_2_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ensures+=AnyOther
protected class Method_EnsuresAssignment_2_3_1 extends AssignmentToken  {
	
	public Method_EnsuresAssignment_2_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMethodAccess().getEnsuresAssignment_2_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Method_EnsuresKeyword_2_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ensures",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ensures");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMethodAccess().getEnsuresAnyOtherParserRuleCall_2_3_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getMethodAccess().getEnsuresAnyOtherParserRuleCall_2_3_1_0();
			return obj;
		}
		return null;
	}

}

// "\n"
protected class Method_LineFeedLfKeyword_2_3_2 extends KeywordToken  {
	
	public Method_LineFeedLfKeyword_2_3_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMethodAccess().getLineFeedLfKeyword_2_3_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Method_EnsuresAssignment_2_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// "/ *< AUTO GENERATED >* /"
protected class Method_AUTOGENERATEDKeyword_3 extends KeywordToken  {
	
	public Method_AUTOGENERATEDKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMethodAccess().getAUTOGENERATEDKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Method_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Method_Group_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Method_MethodAction_0(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// signature=HackySignature
protected class Method_SignatureAssignment_4 extends AssignmentToken  {
	
	public Method_SignatureAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMethodAccess().getSignatureAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Method_AUTOGENERATEDKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("signature",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("signature");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMethodAccess().getSignatureHackySignatureParserRuleCall_4_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getMethodAccess().getSignatureHackySignatureParserRuleCall_4_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class Method_LeftCurlyBracketKeyword_5 extends KeywordToken  {
	
	public Method_LeftCurlyBracketKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMethodAccess().getLeftCurlyBracketKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Method_SignatureAssignment_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "/ * TODO: Implementation * /"
protected class Method_TODOImplementationKeyword_6 extends KeywordToken  {
	
	public Method_TODOImplementationKeyword_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMethodAccess().getTODOImplementationKeyword_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Method_LeftCurlyBracketKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "throw new UnsupportedOperationException(\"Not Implemented\");"
protected class Method_ThrowNewUnsupportedOperationExceptionNotImplementedKeyword_7 extends KeywordToken  {
	
	public Method_ThrowNewUnsupportedOperationExceptionNotImplementedKeyword_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMethodAccess().getThrowNewUnsupportedOperationExceptionNotImplementedKeyword_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Method_TODOImplementationKeyword_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "}"
protected class Method_RightCurlyBracketKeyword_8 extends KeywordToken  {
	
	public Method_RightCurlyBracketKeyword_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMethodAccess().getRightCurlyBracketKeyword_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Method_ThrowNewUnsupportedOperationExceptionNotImplementedKeyword_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule Method ****************/




}
